[tool.poetry]
name="NanoVNASaver"
description="GUI for the NanoVNA and derivates"
version = "0.0.0"
authors = ["Rune B. Broberg <NanoVNA-Saver@users.noreply.github.com>"]
readme = "README.rst"
license = "GPL-3.0-or-later"

homepage = "https://github.com/NanoVNA-Saver/nanovna-saver"
repository = "https://github.com/NanoVNA-Saver/nanovna-saver"

classifiers = [
    "Development Status :: 4 - Beta",
    "Topic :: Communications :: Ham Radio",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Telecommunications Industry"
]
keywords = ["Communications", "Ham Radio", "nanovna"]

packages = [
    { include = "NanoVNASaver", from = "src" },
]
include = [
  "icon_*.*",
  "NanoVNASaver*.*",
  "flatpak.manifest.yml",
  "Makefile"
]


[tool.poetry.dependencies]
python = ">=3.10,<3.14"

pyserial = "^3.5"
PyQt6 = "^6.7.1"
PyQt6-sip = "^13.8.0"
numpy = "^2.1.3"
scipy = "^1.14.1"



[tool.poetry.group.dev.dependencies]
# Static Code Analysis tools
black = "^24.10.0"
flake8 = "^7.1.1"
pylint = "^3.3.3"

# Testing
pytest = "^8.3.4"
pytest-cov = "^6.0.0"
tox = "^4.23.2"

# Prepare installation packages
pyinstaller = "^6.11.1"



[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"



[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
style = "pep440"

[tool.poetry-dynamic-versioning.files."src/NanoVNASaver/_version.py"]
persistent-substitution = true
initial-content = """
  # These version placeholders will be replaced later during substitution.
  VERSION = "0.0.0"
  VERSION_TUPLE = (0, 0, 0)
"""



[tool.poetry.scripts]
NanoVNASaver = 'NanoVNASaver.__main__:main'
NanoVNASaver-gui = 'NanoVNASaver.__main__:main'


[tool.poe.tasks]
test = "pytest ."
test-cov = "pytest --cov=src ."
test-full = "tox"

build-pkg-win   = "pyinstaller --onefile -p src -n nanovna-saver.exe nanovna-saver.py --noconsole -i icon_48x48.ico --add-data \"icon_48x48.png:.\""
build-pkg-linux = "pyinstaller --onefile -p src -n nanovna-saver     nanovna-saver.py --add-data \"icon_48x48.png:.\""
build-pkg-macos = "pyinstaller --onedir  -p src -n NanoVNASaver      nanovna-saver.py --window --clean  -y -i icon_48x48.icns --add-data \"icon_48x48.png:.\"  && tar -C dist -zcf ./dist/NanoVNASaver.app-`uname -m`.tar.gz  NanoVNASaver.app"

[tool.poe.tasks.clean]
shell = """
  rm -r dist &
  rm -r build &
  python -Bc "import pathlib; [p.unlink() for p in pathlib.Path('.').rglob('*.py[co]')]" &
  python -Bc "import pathlib; [p.unlink() for p in pathlib.Path('.').rglob('*.log')]" &
  python -Bc "import pathlib; [p.rmdir() for p in pathlib.Path('.').rglob('__pycache__')]"
"""


[tool.pytest.ini_options]
pythonpath = [
  '.', 'src',
]

[tool.black]
line-length = 80

[tool.ruff]
line-length = 80
target-version = 'py311'
fix = true
show-fixes = true
unsafe-fixes = false

[tool.ruff.lint]
select = [
    'E', 'W',   # pycodestyle (E(rror), W(arning))
    'F',        # Pyflakes
    'B',        # flake8-bugbear
    'I',        # isort
    'N',        # pep8-naming
    'PL',       # pylint
    'C90',      # mccabe
    'RUF100',   # unused suppresions
]
ignore = [
  'N802',
  'N806',
  'N999',
]

[tool.ruff.lint.mccabe]
max-complexity = 10
